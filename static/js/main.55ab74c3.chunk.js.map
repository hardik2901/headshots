{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","components/CheckoutSteps.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/ShippingScreen.js","screens/PaymentSreen.js","screens/PlaceOrderScreen.js","constants/orderConstants.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","x","map","filter","shippingAdress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","shippingAddress","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","Link","className","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Rating","value","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","width","height","margin","display","marginTop","HomeScreen","match","keyword","params","pageNumber","useEffect","a","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","history","useState","qty","setQty","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","push","size","disabled","addToCart","getState","setItem","stringify","CheckoutSteps","step1","step2","step3","step4","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","Jumbotron","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","Authorization","token","submitHandler","put","updateUserProfile","ShippingScreen","address","setAddress","setState","postalCode","setPostalCode","country","setCountry","contactNumber","setContactNumber","required","PaymentScreen","setPaymentMethod","savePaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","orderCreate","order","city","index","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.55ab74c3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\n\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\"","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers'\nimport { cartReducer } from \"./reducers/cartReducers\"\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducers\"\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n        paymentMethod: paymentMethodFromStorage\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload\n            }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (\n    state = { product: { reviews: [] } },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\n\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\"\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find((x) => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x\n                    ),\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAdress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        default:\n            return state\n\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL\n} from \"../constants/userConstants\"\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return {\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return {\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                user: action.payload\n            }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                userInfo: action.payload\n            }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\n\n\n","import axios from \"axios\"\nimport {\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n\n} from \"../constants/userConstants\"\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data,\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        const message =\n            error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        if (message === 'Not authorized, token failed') {\n            dispatch(logout())\n        }\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: message,\n        })\n    }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nconst Header = () => {\n\n  const dispatch = useDispatch()\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n  return (\n    <header>\n      <Navbar bg=\"primary\" variant=\"dark\" expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>HeadShots</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav >\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copright &copy; HeadShots</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        >\n          {' '}\n        </i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        >\n          {' '}\n        </i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        >\n          {' '}\n        </i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        >\n          {' '}\n        </i>\n      </span>\n\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        >\n          {' '}\n        </i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\n// empty star = <i class=\"far fa-star\"></i>\n// full star = <i class=\"fas fa-star\"></i>\n// half star = <i class=\"fas fa-star-half-alt\"></i>\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Rating from './Rating.js'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"mb-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n            color=\"#FDCC0D\"\n          />\n        </Card.Text>\n\n        <Card.Text as=\"h3\">₹{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({variant,children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant :\"info\"\n}\n\nexport default Message\n","import { Spinner } from 'react-bootstrap'\nimport React from 'react'\n\nconst Loader = () => {\n    return (\n        <>\n            <Spinner\n                animation='grow'\n                role='status'\n                style={{\n                    width: '100px',\n                    height: '100px',\n                    margin: 'auto',\n                    display: 'block',\n                    marginTop: '30vh'\n                }}>\n                <span className='sr-only'> Loading...</span>\n            </Spinner>\n\n        </>\n\n    )\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts } from '../actions/productActions'\n\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n\n\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n\n\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={6} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get('https://happy-node-deploy.herokuapp.com/api/products')\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\n\n\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Form, Button } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { product, loading, error } = productDetails\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        {' '}\n        Go Back{' '}\n      </Link>\n      {loading ? (<Loader />) : error ? (<Message variant='danger' children={error} />) :\n        (<Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                  color=\"#FDCC0D\"\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>price : ₹{product.price}</ListGroup.Item>\n              <ListGroup.Item>price : {product.description}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>₹{product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status</Col>\n                    <Col>\n                      <strong>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col> Qty </Col>\n                      <Col>\n                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\n                          {\n                            [...Array(product.countInStock).keys()].map((x) => (\n                              <option key={x + 1} value={x + 1}>{x + 1}</option>\n                            ))\n                          }\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  {userInfo ? (\n\n                    <div className=\"d-grid gap-1\">\n                      <Button\n                        onClick={addToCartHandler}\n                        variant='info'\n                        size='lg'\n                        disabled={product.countInStock === 0}\n\n                      >\n                        Add To cart\n                      </Button>\n                    </div>) : (\n                    <>\n                      <Link to='/login'>\n                        <div className=\"d-grid\">\n                          <Button variant=\"dark\" size=\"lg\">\n                            Add To Cart\n                          </Button>\n                        </div>\n                      </Link>\n                    </>\n                  )}\n\n\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>)}\n\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from \"axios\"\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\"\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (paymentMethod) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: paymentMethod\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod))\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Form, Button, ListGroup, Image, Card, Jumbotron, Container } from 'react-bootstrap'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\n\nconst CartScreen = ({ match, location, history }) => {\n\n    const productId = match.params.id\n\n    const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n    return (\n        <Row>\n            <h1>Shopping Cart</h1>\n            <CheckoutSteps step1 />\n            {cartItems.length === 0 ? (\n                <>\n                    <Message variant='danger'>\n                        <Link className=\"lead\" to=\"/\">\n                            Go back\n                        </Link>\n                    </Message>\n                    <Jumbotron>\n                        <Container className=\"text-center\">\n                            <i className=\"fa fa-shopping-cart fa-7x\"></i>\n                            <h1 className=\"display-3 \">Your cart is empty !</h1>\n                            <hr className=\"my-2\" />\n                            <p className=\"lead\">Start Adding stuffs to it Explore now. Click <Link to=\"/\">go back</Link> </p>\n                        </Container>\n\n                    </Jumbotron>\n                </>\n            ) : (\n                <Row>\n                    <Col md={8}>\n                        <ListGroup variant='flush'>\n                            {cartItems.map((item) => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n                                        <Col md={2}>₹{item.price}</Col>\n                                        <Col md={2}>\n                                            <Form.Control\n                                                as='select'\n                                                value={item.qty}\n                                                onChange={(e) =>\n                                                    dispatch(\n                                                        addToCart(item.product, Number(e.target.value))\n                                                    )\n                                                }\n                                            >\n                                                {[...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x + 1} value={x + 1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Col>\n                                        <Col md={2}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    </Col>\n                    <Col md={4}>\n                        <Card>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>\n                                        Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                                        items\n                                    </h2>\n                                    ₹\n                                    {cartItems\n                                        .reduce((acc, item) => acc + item.qty * item.price, 0)\n                                        .toFixed(2)}\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <div className=\"d-grid gap-2\">\n                                        <button\n                                            onClick={checkoutHandler}\n                                            className=\"btn btn-primary\"\n                                            type=\"button\"\n                                            disabled={cartItems.length === 0}\n                                        >\n                                            Proceed To Checkout\n                                        </button>\n                                    </div>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Card>\n                    </Col>\n                </Row>\n            )}\n\n        </Row >\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, error, userInfo } = userLogin\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const SubmitHandler = (e) => {\n        e.preventDefault()\n        // Dispatch Login\n\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>\n                Login In\n            </h1>\n            {error && <Message variant=\"danger\" children={error} />}\n            {loading && <Loader />}\n            <Form onSubmit={SubmitHandler}>\n                <Form.Group controlId='email' className=\"mb-3\">\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password' className=\"mb-3\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\" className=\"mb-3\">Login In</Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer?{' '} <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\n                </Col>\n\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector((state) => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Confirm password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary' className=\"mt-2\">\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-2'>\n                <Col>\n                    Have an Account?{' '}\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Login\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails('profile'))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n        }\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h1>User Profile</h1>\n                {success && (<Message variant='success' children='Profile Successfully Updated' />)}\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder={userInfo.email}\n                            value={email}\n                            disabled\n                        ></Form.Control>\n                    </Form.Group>\n\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary' className=\"mt-2\" onClick={submitHandler}>\n                        Update\n                    </Button>\n                </Form>\n\n            </Col>\n            <Col md={9}>\n                My orders\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst ShippingScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n\n    const [name, setName] = useState(shippingAddress.name)\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [state, setState] = useState(shippingAddress.state)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n    const [contactNumber, setContactNumber] = useState(shippingAddress.contactNumber)\n\n    const dispatch = useDispatch()\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ name, address, state, postalCode, country, contactNumber }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <h1>\n                Shipping\n            </h1>\n            <CheckoutSteps step1 step2 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Enter Name</Form.Label>\n                    <Form.Control\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        required\n                        onChange={(e) => setName(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Enter Address</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Address'\n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='state'>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control\n                        type='state'\n                        placeholder='Enter State'\n                        value={state}\n                        required\n                        onChange={(e) => setState(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Enter PIN Code</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Postal Code'\n                        value={postalCode}\n                        required\n                        onChange={(e) => setPostalCode(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Enter Country</Form.Label>\n                    <Form.Control\n                        placeholder='Enter Country'\n                        type='text'\n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='contactNumber'>\n                    <Form.Label>Enter Contact No.</Form.Label>\n                    <Form.Control\n                        type='text'\n                        placeholder='Enter Contact Number'\n                        value={contactNumber}\n                        required\n                        onChange={(e) => setContactNumber(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n    const cart = useSelector((state) => state.cart)\n    const { shippingAddress } = cart\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState(cart.paymentMethod)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='PayPal'\n                            name='paymentMethod'\n                            value='PayPal'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        ></Form.Check>\n                        <Form.Check\n                            type='radio'\n                            label='Paytm'\n                            id='Paytm'\n                            name='paymentMethod'\n                            value='paytm'\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n\n                        ></Form.Check>\n                        <Form.Check\n                            type='radio'\n                            label='Debit Card'\n                            id='debitCard'\n                            name='debitCard'\n                            value='debitCard'\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n\n                        ></Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants.js'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart)\n\n    if (!cart.shippingAddress.address) {\n        history.push('/shipping')\n    } else if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n    //   Calculate prices\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    cart.itemsPrice = addDecimals(\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (\n        Number(cart.itemsPrice) +\n        Number(cart.shippingPrice) +\n        Number(cart.taxPrice)\n    ).toFixed(2)\n\n    const orderCreate = useSelector((state) => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: USER_DETAILS_RESET })\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n        // eslint-disable-next-line\n    }, [history, success])\n\n    const placeOrderHandler = () => {\n        // dispatch(\n        //     createOrder({\n        //         orderItems: cart.cartItems,\n        //         shippingAddress: cart.shippingAddress,\n        //         paymentMethod: cart.paymentMethod,\n        //         itemsPrice: cart.itemsPrice,\n        //         shippingPrice: cart.shippingPrice,\n        //         taxPrice: cart.taxPrice,\n        //         totalPrice: cart.totalPrice,\n        //     })\n        // )\n    }\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address:</strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                                {cart.shippingAddress.postalCode},{' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? (\n                                <Message>Your cart is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrderHandler}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","export const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentSreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Route exact path='placeorder' component={PlaceOrderScreen} />\n        <Route exact path='/payment' component={PaymentScreen} />\n        <Route exact path='/shipping' component={ShippingScreen} />\n        <Route exact path='/profile' component={ProfileScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route exact path=\"/login\" component={LoginScreen} />\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route path=\"/product/:id\" component={ProductScreen} />\n        <Route path=\"/cart/:id?\" component={CartScreen} />\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      console.log(swUrl);\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}